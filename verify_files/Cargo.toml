[package]
name = "verify-files"
version = "0.1.0"
authors = ["Stephan Sokolow <http://www.ssokolow.com/ContactMe>"]
edition = "2018"
license = "MIT OR Apache-2.0"  # TODO: Decide if I want something else before publishing

[dependencies]
anyhow = "1.0.98"
faccess = "0.2.4"
ignore = "0.4.22"
jzon = "0.12.4"
lazy_static = "1.4.0"
log = "0.4.27"
serde = { version = "1.0.219", features = ["derive"] }
stderrlog = "0.6.0"
clap = { version = "4.5.40", features = ["derive"] }
validator = { version = "0.20.0", features = ["derive"] }
toml_edit = { version = "0.22.27", features = ["serde"] }
clap-verbosity-flag = "3.0.3"

[dependencies.image]
default-features = false
features = ["bmp", "gif", "ico", "jpeg", "png", "pnm", "tga", "tiff"]
version = "0.25.6"
# TODO: Check why `tiff` wants a newer miniz_oxide than `png` and `flate2`

[dependencies.flate2]
version = "1.1.2"
default-features = false
features = ["miniz_oxide"]  # Make sure we're using the same backend as `image`

[dependencies.zip]
default-features = false  # Disable bzip2 because it's not pure Rust
features = ["deflate"]    # TODO: Do I need anything "time" brings?
version = "4.2"

[profile.release]
lto = true
codegen-units = 1

# Remove debug symbols from precompiled std to save space
# and speed up linking time.
# Backtraces will still work as long as you don't strip="symbols"/strip=true
#
# Source: https://davidlattimore.github.io/working-on-rust-iteration-time.html
strip="debuginfo"

# -- Combine reasonable rebuild time and reasonable perf in debug builds --
# (Thanks to https://www.reddit.com/r/rust/comments/gvrgca/)
# See also https://doc.rust-lang.org/cargo/reference/profiles.html#overrides

[profile.dev.package."*"]
# Build dependencies with full release optimizations in debug builds.
# (Since they won't change often and probably do most of the heavy lifting)
opt-level = 3

[profile.dev]
# Build the project itself with just enough optimization to smooth out the
# most egregious of the abstractions which are only zero-cost when optimized
opt-level = 1

# Disable building debug info and strip std debug symbols to speed up linking.
# Backtraces will still work as long as you don't strip="symbols"/strip=true
#
# Source: https://davidlattimore.github.io/working-on-rust-iteration-time.html
debug = 0
strip="debuginfo"

# Uncomment to sacrifice Drop-on-panic cleanup and std::panic::catch_unwind
# for ~24K space saving
#panic = 'abort'
